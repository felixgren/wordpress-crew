{"version":3,"sources":["@wordpress/components/src/tools-panel/tools-panel/hook.js"],"names":["useToolsPanel","props","className","resetAll","otherProps","cx","classes","styles","ToolsPanel","panelItems","setPanelItems","registerPanelItem","item","items","deregisterPanelItem","label","filter","menuItems","setMenuItems","forEach","hasValue","isShownByDefault","toggleItem","resetAllItems","resetMenuItems","panelContext"],"mappings":";;;;;;;;;AAGA;;AAKA;;AACA;;AACA;;AAVA;AACA;AACA;;AAGA;AACA;AACA;AAKO,SAASA,aAAT,CAAwBC,KAAxB,EAAgC;AACtC,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,QAAb;AAAuB,OAAGC;AAA1B,MAAyC,+BAC9CH,KAD8C,EAE9C,YAF8C,CAA/C;AAKA,QAAMI,EAAE,GAAG,mBAAX;AACA,QAAMC,OAAO,GAAG,sBAAS,MAAM;AAC9B,WAAOD,EAAE,CAAEE,MAAM,CAACC,UAAT,EAAqBN,SAArB,CAAT;AACA,GAFe,EAEb,CAAEA,SAAF,CAFa,CAAhB,CAPsC,CAWtC;;AACA,QAAM,CAAEO,UAAF,EAAcC,aAAd,IAAgC,uBAAU,EAAV,CAAtC;;AAEA,QAAMC,iBAAiB,GAAKC,IAAF,IAAY;AACrCF,IAAAA,aAAa,CAAIG,KAAF,IAAa,CAAE,GAAGA,KAAL,EAAYD,IAAZ,CAAf,CAAb;AACA,GAFD,CAdsC,CAkBtC;AACA;;;AACA,QAAME,mBAAmB,GAAKC,KAAF,IAAa;AACxCL,IAAAA,aAAa,CAAIG,KAAF,IACdA,KAAK,CAACG,MAAN,CAAgBJ,IAAF,IAAYA,IAAI,CAACG,KAAL,KAAeA,KAAzC,CADY,CAAb;AAGA,GAJD,CApBsC,CA0BtC;;;AACA,QAAM,CAAEE,SAAF,EAAaC,YAAb,IAA8B,uBAAU,EAAV,CAApC,CA3BsC,CA6BtC;;AACA,0BAAW,MAAM;AAChB,UAAML,KAAK,GAAG,EAAd;AAEAJ,IAAAA,UAAU,CAACU,OAAX,CAAoB,CAAE;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,gBAAZ;AAA8BN,MAAAA;AAA9B,KAAF,KAA6C;AAChEF,MAAAA,KAAK,CAAEE,KAAF,CAAL,GAAiBM,gBAAgB,IAAID,QAAQ,EAA7C;AACA,KAFD;AAIAF,IAAAA,YAAY,CAAEL,KAAF,CAAZ;AACA,GARD,EAQG,CAAEJ,UAAF,CARH,EA9BsC,CAwCtC;AACA;;AACA,QAAMa,UAAU,GAAKP,KAAF,IAAa;AAC/BG,IAAAA,YAAY,CAAE,EACb,GAAGD,SADU;AAEb,OAAEF,KAAF,GAAW,CAAEE,SAAS,CAAEF,KAAF;AAFT,KAAF,CAAZ;AAIA,GALD,CA1CsC,CAiDtC;;;AACA,QAAMQ,aAAa,GAAG,MAAM;AAC3B,QAAK,OAAOpB,QAAP,KAAoB,UAAzB,EAAsC;AACrCA,MAAAA,QAAQ;AACR,KAH0B,CAK3B;;;AACA,UAAMqB,cAAc,GAAG,EAAvB;AAEAf,IAAAA,UAAU,CAACU,OAAX,CAAoB,CAAE;AAAEJ,MAAAA,KAAF;AAASM,MAAAA;AAAT,KAAF,KAAmC;AACtDG,MAAAA,cAAc,CAAET,KAAF,CAAd,GAA0B,CAAC,CAAEM,gBAA7B;AACA,KAFD;AAIAH,IAAAA,YAAY,CAAEM,cAAF,CAAZ;AACA,GAbD;;AAeA,QAAMC,YAAY,GAAG;AAAER,IAAAA,SAAF;AAAaN,IAAAA,iBAAb;AAAgCG,IAAAA;AAAhC,GAArB;AAEA,SAAO,EACN,GAAGV,UADG;AAENqB,IAAAA,YAFM;AAGNF,IAAAA,aAHM;AAIND,IAAAA,UAJM;AAKNpB,IAAAA,SAAS,EAAEI;AALL,GAAP;AAOA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useEffect, useMemo, useState } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport * as styles from '../styles';\nimport { useContextSystem } from '../../ui/context';\nimport { useCx } from '../../utils/hooks/use-cx';\n\nexport function useToolsPanel( props ) {\n\tconst { className, resetAll, ...otherProps } = useContextSystem(\n\t\tprops,\n\t\t'ToolsPanel'\n\t);\n\n\tconst cx = useCx();\n\tconst classes = useMemo( () => {\n\t\treturn cx( styles.ToolsPanel, className );\n\t}, [ className ] );\n\n\t// Allow panel items to register themselves.\n\tconst [ panelItems, setPanelItems ] = useState( [] );\n\n\tconst registerPanelItem = ( item ) => {\n\t\tsetPanelItems( ( items ) => [ ...items, item ] );\n\t};\n\n\t// Panels need to deregister on unmount to avoid orphans in menu state.\n\t// This is an issue when panel items are being injected via SlotFills.\n\tconst deregisterPanelItem = ( label ) => {\n\t\tsetPanelItems( ( items ) =>\n\t\t\titems.filter( ( item ) => item.label !== label )\n\t\t);\n\t};\n\n\t// Manage and share display state of menu items representing child controls.\n\tconst [ menuItems, setMenuItems ] = useState( {} );\n\n\t// Setup menuItems state as panel items register themselves.\n\tuseEffect( () => {\n\t\tconst items = {};\n\n\t\tpanelItems.forEach( ( { hasValue, isShownByDefault, label } ) => {\n\t\t\titems[ label ] = isShownByDefault || hasValue();\n\t\t} );\n\n\t\tsetMenuItems( items );\n\t}, [ panelItems ] );\n\n\t// Toggle the checked state of a menu item which is then used to determine\n\t// display of the item within the panel.\n\tconst toggleItem = ( label ) => {\n\t\tsetMenuItems( {\n\t\t\t...menuItems,\n\t\t\t[ label ]: ! menuItems[ label ],\n\t\t} );\n\t};\n\n\t// Resets display of children and executes resetAll callback if available.\n\tconst resetAllItems = () => {\n\t\tif ( typeof resetAll === 'function' ) {\n\t\t\tresetAll();\n\t\t}\n\n\t\t// Turn off display of all non-default items.\n\t\tconst resetMenuItems = {};\n\n\t\tpanelItems.forEach( ( { label, isShownByDefault } ) => {\n\t\t\tresetMenuItems[ label ] = !! isShownByDefault;\n\t\t} );\n\n\t\tsetMenuItems( resetMenuItems );\n\t};\n\n\tconst panelContext = { menuItems, registerPanelItem, deregisterPanelItem };\n\n\treturn {\n\t\t...otherProps,\n\t\tpanelContext,\n\t\tresetAllItems,\n\t\ttoggleItem,\n\t\tclassName: classes,\n\t};\n}\n"]}